<UserControl x:Class="lpubsppop01.AnyFilterVSIX.AnyFilterSettingsControl"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             mc:Ignorable="d" d:DesignHeight="300" d:DesignWidth="600"
             Height="320" Name="this">
    <UserControl.Resources>
        <Style TargetType="Label">
            <Setter Property="VerticalAlignment" Value="Center"/>
        </Style>
        <Style TargetType="CheckBox">
            <Setter Property="VerticalAlignment" Value="Center"/>
            <Setter Property="Margin" Value="0,3,0,3"/>
        </Style>
        <Style TargetType="TextBox">
            <Setter Property="VerticalAlignment" Value="Center"/>
        </Style>
        <Style TargetType="Button">
            <Setter Property="VerticalAlignment" Value="Center"/>
            <Setter Property="Margin" Value="3"/>
        </Style>
    </UserControl.Resources>
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="*"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
        </Grid.RowDefinitions>
        <DockPanel Grid.Row="0" Grid.Column="0" Grid.ColumnSpan="4" Margin="0,0,0,3">
            <DockPanel DockPanel.Dock="Right" Width="80" Margin="6,0,0,0" LastChildFill="False">
                <Button DockPanel.Dock="Top" Margin="0" Click="btnAdd_Click">Add</Button>
                <Button DockPanel.Dock="Top" Margin="0,6,0,0" Click="btnRemove_Click"
                        IsEnabled="{Binding HasSelection, ElementName=this}">Remove</Button>
            </DockPanel>
            <ListBox x:Name="lstMaster">
                <ListBox.ItemTemplate>
                    <DataTemplate>
                        <StackPanel Orientation="Horizontal">
                            <TextBlock Text="{Binding Number, StringFormat=d2}"/>
                            <TextBlock Text=". "/>
                            <TextBlock Text="{Binding Title}"/>
                        </StackPanel>
                    </DataTemplate>
                </ListBox.ItemTemplate>
            </ListBox>
        </DockPanel>
        <Grid Grid.Row="1" IsEnabled="{Binding HasSelection, ElementName=this}">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="Auto"/>
            </Grid.ColumnDefinitions>
            <Label Grid.Row="0" Grid.Column="0">Title</Label>
            <TextBox  Grid.Row="0" Grid.Column="1" Grid.ColumnSpan="3"
                      Text="{Binding SelectedValue.Title, ElementName=lstMaster, UpdateSourceTrigger=PropertyChanged}"/>
            <Label Grid.Row="1" Grid.Column="0">Command</Label>
            <TextBox Grid.Row="1" Grid.Column="1"
                     Text="{Binding SelectedValue.Command, ElementName=lstMaster, UpdateSourceTrigger=PropertyChanged}" Name="txtCommand"/>
            <Button Grid.Row="1" Grid.Column="2" Width="20" Margin="6,0,0,0" Height="{Binding ActualHeight, ElementName=txtCommand}" Click="btnCommand_Click">...</Button>
            <Label Grid.Row="2" Grid.Column="0">Arguments</Label>
            <TextBox Grid.Row="2" Grid.Column="1" Grid.ColumnSpan="2" Name="txtArguments"
                     Text="{Binding SelectedValue.Arguments, ElementName=lstMaster, UpdateSourceTrigger=PropertyChanged}"/>
            <Popup PlacementTarget="{Binding ElementName=txtArguments}" Placement="Bottom" VerticalOffset="6"
                   IsOpen="{Binding IsFocused, ElementName=txtArguments, Mode=OneWay}">
                <Border BorderBrush="LightGray" BorderThickness="1" Background="Snow" Padding="2">
                    <TextBlock>$(InputText), $(InputTempFilePath), $(UserInput), $(UserInputTempFilePath) is available.</TextBlock>
                </Border>
            </Popup>
        </Grid>
        <Grid Grid.Row="2" IsEnabled="{Binding HasSelection, ElementName=this}">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="Auto"/>
            </Grid.ColumnDefinitions>
            <Label Grid.Row="0" Grid.Column="0">Input Encoding</Label>
            <ComboBox Grid.Row="0" Grid.Column="1" Margin="0,3,0,3" Name="cmbInputEncoding"/>
            <ComboBox Grid.Row="0" Grid.Column="2" Width="60" Margin="3,3,0,3" Name="cmbInputNewLineKind"/>
            <Label Grid.Row="1" Grid.Column="0">Output Encoding</Label>
            <ComboBox Grid.Row="1" Grid.Column="1" Grid.ColumnSpan="2" Margin="0,3,0,3" Name="cmbOutputEncoding"/>
        </Grid>
        <Grid Grid.Row="3" IsEnabled="{Binding HasSelection, ElementName=this}">
            <Grid.RowDefinitions>
                <RowDefinition Height="*"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
            </Grid.RowDefinitions>
            <CheckBox Grid.Row="0" IsChecked="{Binding SelectedValue.InsertsAfterCurrentLine, ElementName=lstMaster}">Inserts result text after current line</CheckBox>
            <CheckBox Grid.Row="1" IsChecked="{Binding SelectedValue.PassesInputTextToStandardInput, ElementName=lstMaster}">Passes input text to standard input</CheckBox>
            <DockPanel Grid.Row="2">
                <CheckBox DockPanel.Dock="Left" IsChecked="{Binding SelectedValue.UsesTemplateFile, ElementName=lstMaster}">Use input template file:</CheckBox>
                <Button DockPanel.Dock="Right" Width="20" Margin="6,0,0,0" Height="{Binding ActualHeight, ElementName=txtTemplate}" Click="btnTemplate_Click"
                        IsEnabled="{Binding SelectedValue.UsesTemplateFile, ElementName=lstMaster}">...</Button>
                <TextBox Margin="6,0,0,0" Name="txtTemplate" Text="{Binding SelectedValue.TemplateFilePath, ElementName=lstMaster, UpdateSourceTrigger=PropertyChanged}"
                         IsEnabled="{Binding SelectedValue.UsesTemplateFile, ElementName=lstMaster}"/>
            </DockPanel>
            <Popup PlacementTarget="{Binding ElementName=txtTemplate}" Placement="Top" VerticalOffset="-6"
                   IsOpen="{Binding IsFocused, ElementName=txtTemplate, Mode=OneWay}">
                <Border BorderBrush="LightGray" BorderThickness="1" Background="Snow" Padding="2">
                    <TextBlock>$(InputText), $(UserInput) is available in template file content.</TextBlock>
                </Border>
            </Popup>
        </Grid>
    </Grid>
</UserControl>
